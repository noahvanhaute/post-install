#!/usr/bin/env bash

spinner()
{
	local i=1
	local prompt="$1"
	local spinchars="\|/-"

	echo -n "$prompt ["
	while :
	do
		echo -en "${spinchars:i++%4:1}]"
		echo -en "\b\b"
		sleep 0.1
	done
}

start_spinner() {
	spinner "$1"&
	SPINNER_PID=$!
	disown
}

stop_spinner() {
    if [[ -n "${SPINNER_PID:-}" ]]; then
        kill "$SPINNER_PID" 2>/dev/null
        wait "$SPINNER_PID" 2>/dev/null
        unset SPINNER_PID
		# Green check mark, reset to default color after
		echo -e "\e[32mâœ”\e[39m"
    fi
}

cleanup () {
	stop_spinner
	# Restore sudo timeout to default
	sudo rm -f /etc/sudoers.d/timeout
	# Remove temporary polkit flatpak rule
	sudo rm -f /etc/polkit-1/rules.d/45-flatpak-nopw.rules
	# Make the cursor visible again
	echo -en "\e[?25h"
}

essential_packages=(
	btop
	fastfetch
	fzf
	gcc
	juliaup
	jq
	make
	neovim
	nodejs
	ShellCheck
	stow
	trash-cli
	typst
	zathura
	zathura-plugin-cb
	zathura-plugin-pdf-mupdf
	zsh
	zsh-syntax-highlighting
)

desktop_packages=(
	cava
	flameshot
	flatpak
	FreeCAD
	gimp
	ibm-plex-mono-fonts
	ibm-plex-sans-fonts
	inkscape
	iosevka-fonts
	keyd
	kicad
	kid3
	kronometer
	libnotify-tools
	mpd
	mpDris2
	mpv
	ncdu
	opi
	qbittorrent
	qview
	rmpc
	shntool
	syncthing
	wezterm
)

latex_packages=(
	perl-Parse-RecDescent # Required for biber
	texlive-adjustbox
	texlive-beamer
	texlive-biber
	texlive-biblatex-ieee
	texlive-cleveref
	texlive-csquotes
	texlive-koma-script
	texlive-latexmk
	texlive-matlab-prettifier
	texlive-mhchem
	texlive-newtx
	texlive-pgfplots
	texlive-plex
	texlive-scheme-basic
	texlive-tabularray
	texlive-tex-gyre
)

flatpaks=(
	com.discordapp.Discord
	com.github.ahrm.sioyek
	org.jabref.jabref
	org.localsend.localsend_app
)

while getopts "cn:w" option; do
	case $option in
		c)
			clone_flag=true ;;
		n)
			host_name="$OPTARG" ;;
		w)
			wsl_flag=true ;;
		*)
			echo "Usage: $0 [-c] [-n hostname] [-w]"
			exit 1 ;;
	esac
done

trap cleanup EXIT
trap 'echo "Error on line $LINENO"; cleanup' ERR INT TERM

set -Eeuo pipefail

# Hide the cursor
echo -en "\e[?25l"

# Temporarily increase timeout for sudo command to prevent being password prompted multiple times
echo 'Defaults timestamp_timeout=30' | sudo tee /etc/sudoers.d/timeout &> /dev/null

if [[ -z ${wsl_flag+x} ]]; then
	# Temporarily add a rule that turns of the need for a password to install flatpaks system-wide
	sudo tee /etc/polkit-1/rules.d/45-flatpak-nopw.rules > /dev/null <<- EOF
	polkit.addRule(function(action, subject) {
		if (action.id.startsWith("org.freedesktop.Flatpak") &&
			subject.user == "$USER") {
				return polkit.Result.YES;
			}
	});
	EOF
fi

if [[ -n ${host_name+x} ]]; then
	start_spinner "Setting hostname"
	sudo hostnamectl hostname "$host_name"
	stop_spinner
fi

start_spinner "Making zypper faster"
sudo sed -e 's/^# download.max_concurrent_connections = 5/download.max_concurrent_connections = 10/' \
	-e 's/^# download.min_download_speed = 0/download.min_download_speed = 20000/' \
	-i /etc/zypp/zypp.conf
stop_spinner

if [[ -z ${wsl_flag+x} ]]; then
	start_spinner "Changing GRUB timeout"
	sudo sed -i 's/^GRUB_TIMEOUT=[0-9]\+/GRUB_TIMEOUT=2/' /etc/default/grub
	sudo grub2-mkconfig -o /boot/grub2/grub.cfg &> /dev/null
	stop_spinner

	start_spinner "Opening some ports"
	# Port needs to be open for localsend to work
	(
	sudo firewall-cmd --permanent --add-port=53317/tcp
	sudo firewall-cmd --permanent --add-port=53317/udp
	sudo firewall-cmd --reload
	) &> /dev/null
	stop_spinner
fi

start_spinner "Updating the system"
sudo zypper --non-interactive dist-upgrade --allow-vendor-change &> /dev/null
stop_spinner

start_spinner "Installing packages, this might take a while"
(
# Additional repo provides `zsh-syntax-highlighting`
sudo zypper --non-interactive addrepo https://download.opensuse.org/repositories/home:leanvargas/openSUSE_Tumbleweed/home:leanvargas.repo
sudo rpm --import https://download.opensuse.org/repositories/home:/leanvargas/openSUSE_Tumbleweed/repodata/repomd.xml.key
sudo zypper --non-interactive refresh
sudo zypper --non-interactive install "${essential_packages[@]}"
sudo zypper --non-interactive install --no-recommends "${latex_packages[@]}"
if [[ -z ${wsl_flag+x} ]]; then
	sudo zypper --non-interactive install "${desktop_packages[@]}"
	opi -n codecs
	flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
	flatpak install --assumeyes --noninteractive flathub "${flatpaks[@]}"

	# Install Tor Browser
	gpg --auto-key-locate nodefault,wkd --locate-keys torbrowser@torproject.org
	gpg --output ~/tor.keyring --export 0xEF6E286DDA85EA2A4BA7DE684E2C6E8793298290
	curl -LOO $(curl -s https://aus1.torproject.org/torbrowser/update_3/release/download-linux-x86_64.json | jq -r '"\(.binary) \(.sig)"')
	if gpgv --keyring ./tor.keyring ~/tor-browser-linux-x86_64-*.tar.xz.asc ~/tor-browser-linux-x86_64-*.tar.xz
	then
		tar -xJf tor-browser-linux-x86_64-*.tar.xz
		rm tor-browser-linux-x86_64-*.tar.xz tor-browser-linux-x86_64-*.tar.xz.asc tor.keyring
		sudo mv tor-browser /opt/
		cd /opt/tor-browser/
		./start-tor-browser.desktop --register-app
		cd
	fi
fi
) &> /dev/null
stop_spinner
# Red warning, reset to default color after
if [[ ! -d "/opt/tor-browser/" && -z ${wsl_flag-x} ]]; then
	echo -e "\e[31mUnable to verify Tor Browser signature, skipped installation\e[39m"
fi

start_spinner "Configuring applications"
(
if [[ -n ${clone_flag+x} ]]; then
	git clone https://github.com/noahvanhaute/dotfiles.git
else
	ssh-keyscan github.com >> ~/.ssh/known_hosts
	git clone git@github.com:noahvanhaute/dotfiles.git
fi
) &> /dev/null
if [[ -d "$HOME/dotfiles" ]]; then
	cd ~/dotfiles/
	stow .
	sudo stow etc -t /etc/
	cd
	stop_spinner
else
	stop_spinner
	# Red warning, reset to default color after
	echo -e "\e[31mUnable to clone dotfiles\e[39m"
fi

if [[ -z ${wsl_flag+x} ]]; then
	start_spinner "Setting up services"
	(
	sudo systemctl enable --now keyd
	systemctl enable --now --user mpd mpDris2 syncthing
	) &> /dev/null
	stop_spinner

	start_spinner "Setting up autostart"
	mkdir -p .config/autostart
	cp /usr/share/applications/org.flameshot.Flameshot.desktop ~/.config/autostart/
	mkdir -p ~/Pictures/Screenshots/
	stop_spinner
fi

start_spinner "Setting zsh as default shell"
sudo chsh -s /usr/bin/zsh "$USER"
stop_spinner

echo "Setup complete, you should reboot your system"
